generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id         String    @id @db.Uuid
  label      String?   @db.VarChar(20)
  created_at DateTime? @db.Date
  updated_at DateTime? @db.Date
  produit    produit[]
}

model partner {
  id      String    @id @db.Uuid
  nom     String?   @db.VarChar(30)
  address String?   @db.VarChar(50)
  produit produit[]
}

model produit {
  id          String    @id @db.Uuid
  partner_id  String?   @db.Uuid
  category_id String?   @db.Uuid
  level       Int?
  label       String?   @db.VarChar(40)
  quantity    Int?
  created_at  DateTime? @db.Date
  updated_at  DateTime? @db.Date
  category    category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  partner     partner?  @relation(fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reward      reward[]
}

model reward {
  id          String        @id @db.Uuid
  product_id  String?       @db.Uuid
  label       String?       @db.VarChar(40)
  description String?
  point       Int?
  produit     produit?      @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_reward user_reward[]
}

model shared_reward {
  id                                  String    @id @db.Uuid
  recever_id                          String?   @db.Uuid
  sender_id                           String?   @db.Uuid
  point                               Int?
  created_at                          DateTime? @db.Date
  updated_at                          DateTime? @db.Date
  user_shared_reward_recever_idTouser user?     @relation("shared_reward_recever_idTouser", fields: [recever_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_shared_reward_sender_idTouser  user?     @relation("shared_reward_sender_idTouser", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model step {
  id         String    @id @db.Uuid
  user_id    String?   @db.Uuid
  count      Int?
  point      Int?
  created_at DateTime? @db.Date
  updated_at DateTime? @db.Date
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                           String          @id @db.Uuid
  first_name                                   String?         @db.VarChar(20)
  last_name                                    String?         @db.VarChar(20)
  user_name                                    String?         @db.VarChar(15)
  password                                     String?         @db.VarChar(100)
  email                                        String?         @db.VarChar(60)
  contact                                      String?         @db.VarChar(10)
  activated                                    Boolean?
  archived                                     Boolean?
  created_at                                   DateTime?       @db.Date
  updated_at                                   DateTime?       @db.Date
  shared_reward_shared_reward_recever_idTouser shared_reward[] @relation("shared_reward_recever_idTouser")
  shared_reward_shared_reward_sender_idTouser  shared_reward[] @relation("shared_reward_sender_idTouser")
  step                                         step[]
  user_reward                                  user_reward[]
}

model user_reward {
  id         String    @id @db.Uuid
  user_id    String?   @db.Uuid
  reward_id  String?   @db.Uuid
  created_at DateTime? @db.Date
  updated_at DateTime? @db.Date
  reward     reward?   @relation(fields: [reward_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum ROLE {
  SUPER_ADMIN
  ADMIN
  CLIENT
}
